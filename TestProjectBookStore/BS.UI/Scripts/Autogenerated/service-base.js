class ServiceBase {
    constructor() {
    }
    Get(url, model) {
        return $.get(url, model);
    }
    GetSync(url, model) {
        return $.get({
            url: url,
            data: model,
            async: false
        });
    }
    Post(url, model) {
        return $.post(url, model);
    }
    PostSync(url, model) {
        return $.post({
            url: url,
            data: model,
            async: false
        });
    }
    Ajax(options) {
        return $.ajax(options);
    }
    PostJson(url, model) {
        return this.Ajax({
            "contentType": "application/json; charset=UTF-8",
            "data": JSON.stringify(model),
            "url": url,
            "method": "POST"
        });
    }
    RedirectLoads(url) {
        location.assign(url);
    }
    JsonToQuery(jsonString) {
        var str = '?';
        str += jsonString.replace(/\:/g, "=").replace("{", '')
            .replace(/\,/g, "&").replace("}", '').
            replace(/"([^"]*)"/g, '$1');
        return str;
    }
}
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS1iYXNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vVFMvc2VydmljZS1iYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQWUsV0FBVztJQUN0QjtJQUVBLENBQUM7SUFFRCxHQUFHLENBQUMsR0FBVyxFQUFFLEtBQVU7UUFDdkIsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQsT0FBTyxDQUFDLEdBQVcsRUFBRSxLQUFVO1FBQzNCLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQztZQUNULEdBQUcsRUFBRSxHQUFHO1lBQ1IsSUFBSSxFQUFFLEtBQUs7WUFDWCxLQUFLLEVBQUUsS0FBSztTQUNmLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxJQUFJLENBQUMsR0FBVyxFQUFFLEtBQVU7UUFDeEIsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsUUFBUSxDQUFDLEdBQVcsRUFBRSxLQUFVO1FBQzVCLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNWLEdBQUcsRUFBRSxHQUFHO1lBQ1IsSUFBSSxFQUFFLEtBQUs7WUFDWCxLQUFLLEVBQUUsS0FBSztTQUNmLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxJQUFJLENBQUMsT0FBMkI7UUFDNUIsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCxRQUFRLENBQUMsR0FBVyxFQUFFLEtBQVU7UUFDNUIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ2IsYUFBYSxFQUFFLGlDQUFpQztZQUNoRCxNQUFNLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7WUFDN0IsS0FBSyxFQUFFLEdBQUc7WUFDVixRQUFRLEVBQUUsTUFBTTtTQUNuQixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsYUFBYSxDQUFDLEdBQVc7UUFDckIsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsV0FBVyxDQUFDLFVBQWtCO1FBQzFCLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUNkLEdBQUcsSUFBSSxVQUFVLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQzthQUNqRCxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO1lBQ3JDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEMsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0NBQ0o7QUFBQSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiYWJzdHJhY3QgY2xhc3MgU2VydmljZUJhc2Uge1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBHZXQodXJsOiBzdHJpbmcsIG1vZGVsOiBhbnkpOiBKUXVlcnlYSFIge1xyXG4gICAgICAgIHJldHVybiAkLmdldCh1cmwsIG1vZGVsKTtcclxuICAgIH1cclxuXHJcbiAgICBHZXRTeW5jKHVybDogc3RyaW5nLCBtb2RlbDogYW55KTogSlF1ZXJ5WEhSIHtcclxuICAgICAgICByZXR1cm4gJC5nZXQoe1xyXG4gICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgZGF0YTogbW9kZWwsXHJcbiAgICAgICAgICAgIGFzeW5jOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIFBvc3QodXJsOiBzdHJpbmcsIG1vZGVsOiBhbnkpOiBKUXVlcnlYSFIge1xyXG4gICAgICAgIHJldHVybiAkLnBvc3QodXJsLCBtb2RlbCk7XHJcbiAgICB9XHJcblxyXG4gICAgUG9zdFN5bmModXJsOiBzdHJpbmcsIG1vZGVsOiBhbnkpOiBKUXVlcnlYSFIge1xyXG4gICAgICAgIHJldHVybiAkLnBvc3Qoe1xyXG4gICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgZGF0YTogbW9kZWwsXHJcbiAgICAgICAgICAgIGFzeW5jOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIEFqYXgob3B0aW9uczogSlF1ZXJ5QWpheFNldHRpbmdzKTogSlF1ZXJ5WEhSIHtcclxuICAgICAgICByZXR1cm4gJC5hamF4KG9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIFBvc3RKc29uKHVybDogc3RyaW5nLCBtb2RlbDogYW55KTogSlF1ZXJ5WEhSIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5BamF4KHtcclxuICAgICAgICAgICAgXCJjb250ZW50VHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLThcIixcclxuICAgICAgICAgICAgXCJkYXRhXCI6IEpTT04uc3RyaW5naWZ5KG1vZGVsKSxcclxuICAgICAgICAgICAgXCJ1cmxcIjogdXJsLFxyXG4gICAgICAgICAgICBcIm1ldGhvZFwiOiBcIlBPU1RcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIFJlZGlyZWN0TG9hZHModXJsOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICBsb2NhdGlvbi5hc3NpZ24odXJsKTtcclxuICAgIH1cclxuXHJcbiAgICBKc29uVG9RdWVyeShqc29uU3RyaW5nOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHZhciBzdHIgPSAnPyc7XHJcbiAgICAgICAgc3RyICs9IGpzb25TdHJpbmcucmVwbGFjZSgvXFw6L2csIFwiPVwiKS5yZXBsYWNlKFwie1wiLCAnJylcclxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcLC9nLCBcIiZcIikucmVwbGFjZShcIn1cIiwgJycpLlxyXG4gICAgICAgICAgICByZXBsYWNlKC9cIihbXlwiXSopXCIvZywgJyQxJyk7XHJcbiAgICAgICAgcmV0dXJuIHN0cjtcclxuICAgIH1cclxufTsiXX0=